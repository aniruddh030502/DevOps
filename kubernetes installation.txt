 1  hostnamectl set-hostname kmaster
    2  hostname
    3  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
    4  overlay
    5  br_netfilter
    6  EOF
    7  sudo modprobe overlay
    8  sudo modprobe br_netfilter
    9  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
   10  net.bridge.bridge-nf-call-iptables  = 1
   11  net.bridge.bridge-nf-call-ip6tables = 1
   12  net.ipv4.ip_forward                 = 1
   13  EOF
   14  sudo sysctl --system
   15  sudo swapoff -a
   16  (crontab -l 2>/dev/null; echo "@reboot /sbin/swapoff -a") | crontab - || true
   17  sudo apt-get update -y
   18  sudo apt-get install -y software-properties-common gpg curl apt-transport-https ca-certificates
   19  curl -fsSL https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/Release.key |     gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
   20  echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://pkgs.k8s.io/addons:/cri-o:/prerelease:/main/deb/ /" |     tee /etc/apt/sources.list.d/cri-o.list
   21  sudo apt-get update -y
   22  sudo apt-get install -y cri-o
   23  sudo systemctl daemon-reload
   24  sudo systemctl enable crio --now
   25  sudo systemctl start crio.service
   26  VERSION="v1.30.0"
   27  wget https://github.com/kubernetes-sigs/cri-tools/releases/download/$VERSION/crictl-$VERSION-linux-amd64.tar.gz
   28  sudo tar zxvf crictl-$VERSION-linux-amd64.tar.gz -C /usr/local/bin
   29  rm -f crictl-$VERSION-linux-amd64.tar.gz
   30  KUBERNETES_VERSION=1.30
   31  sudo mkdir -p /etc/apt/keyrings
   32  curl -fsSL https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
   33  echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v$KUBERNETES_VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   34  sudo apt-get update -y
   35  apt-cache madison kubeadm | tac
   36  sudo apt-get install -y kubelet=1.30.10-1.1 kubectl=1.30.10-1.1 kubeadm=1.30.10-1.1
   37  sudo apt-get install -y jq
   38  local_ip="$(ip --json addr show eth0 | jq -r '.[0].addr_info[] | select(.family == "inet") | .local')"
   39  cat > /etc/default/kubelet << EOF
   40  KUBELET_EXTRA_ARGS=--node-ip=$local_ip
   41  EOF
   42  kubeadm init
   43  mkdir -p $HOME/.kube
   44  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
   45  sudo chown $(id -u):$(id -g) $HOME/.kube/config
   46  exit
   47  kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
   48  watch -n 1 kubectl get nodes
   49  kubcetl run anipod --image=nginx
   50  kubectl run anipod --image=nginx
   51  kubectl get ppod
   52  kubectl get pod
   53  kubectl describe  pod
   54  kubectl describe  pod anipod
   55  kubectl describe node kmaster | grep "Taint"
   56  kubectl taint node kmaster node-role.kubernetes.io/control-plane:NoSchedule
   57  kubectl taint node kmaster node-role.kubernetes.io/control-plane:NoSchedule-
   58  kubectl get pod
   59  history
   
   
   kubectl taint node kmaster node-role.kubernetes.io/control-plane:NoSchedule-